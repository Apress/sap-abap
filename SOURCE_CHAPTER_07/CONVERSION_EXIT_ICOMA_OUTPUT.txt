FUNCTION CONVERSION_EXIT_ICOMA_OUTPUT.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(INPUT)
*"  EXPORTING
*"     REFERENCE(OUTPUT)
*"  EXCEPTIONS
*"      NUMBER_NOT_TYPE_P
*"      NUMBER_OUT_OF_RANGE
*"      RETURN_STR_NOT_TYPE_C
*"      RETURN_STR_LENGTH_SHORT
*"----------------------------------------------------------------------

DATA: TYP(1)     TYPE C,
      LEN        TYPE I,
      AMTI(9)    TYPE N,
      AMTD(2)    TYPE N,
      LEN1       TYPE I,
      LEN2       TYPE I,
      OFFS       TYPE I.

*****************************************
DESCRIBE FIELD INPUT TYPE TYP.
IF TYP <> 'P'.
 MESSAGE S051(YCL_CH07_MCLASS01) RAISING NUMBER_NOT_TYPE_P.
         " message no 51: Input Number is not Type P
ENDIF.

IF INPUT < 0 OR INPUT > '999999999.99'.
 MESSAGE S052(YCL_CH07_MCLASS01) WITH INPUT RAISING NUMBER_OUT_OF_RANGE.
         " message no 52: Input (&1) not in the range 0 to 999,999,999.99
ENDIF.

DESCRIBE FIELD OUTPUT TYPE TYP.
IF TYP <> 'C'.
 MESSAGE S053(YCL_CH07_MCLASS01) RAISING RETURN_STR_NOT_TYPE_C.
         " message no 53: Return Parameter is not Type C
ENDIF.


DESCRIBE FIELD OUTPUT LENGTH LEN IN CHARACTER MODE.
IF LEN < 15.
 MESSAGE S054(YCL_CH07_MCLASS01) RAISING RETURN_STR_LENGTH_SHORT.
 " message no 54: Return Output Length < 15
ENDIF.
*****************************************
AMTI = TRUNC( INPUT ).
AMTD = FRAC( INPUT ) * 100.
WRITE AMTI TO DEST1+3(9) NO-ZERO.
MOVE '.'  TO DEST1+12(1).
MOVE AMTD TO DEST1+13(2).
DEST2 = ' '.
*********************************
IF INPUT < 1000.
 MOVE DEST1 TO DEST2.
ENDIF.
*************
IF INPUT > 999 AND INPUT < 100000.
 PERFORM WRITE1 USING DEST1 DEST2.
 MOVE DEST1+9 TO DEST2+9.
ENDIF.
*************
IF INPUT > 99999 AND INPUT < 10000000.
 PERFORM WRITE2 USING DEST1 DEST2.
 PERFORM WRITE1 USING DEST1 DEST2.

 MOVE DEST1+9 TO DEST2+9.
ENDIF.
*************
IF INPUT > 9999999.
 MOVE DEST1+3(2) TO DEST2.
 MOVE ',' TO DEST2+2.

 PERFORM WRITE2 USING DEST1 DEST2.
 PERFORM WRITE1 USING DEST1 DEST2.

 MOVE DEST1+9 TO DEST2+9.
ENDIF.
*************
DESCRIBE FIELD DEST2 LENGTH LEN1 IN CHARACTER MODE.
DESCRIBE FIELD OUTPUT LENGTH LEN2 IN CHARACTER MODE .

OFFS = LEN2 - LEN1.
MOVE DEST2 TO OUTPUT+OFFS.

CALL FUNCTION 'STRING_MOVE_RIGHT'
 EXPORTING STRING  = OUTPUT
 IMPORTING RSTRING = OUTPUT.




ENDFUNCTION.